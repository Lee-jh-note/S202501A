<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.oracle.s202501a.dao.jh_dao.InventoryDao">

    <select id="SearchInvenList" resultType="InventoryDto" parameterType="InventoryDto">
        select *
        from ( select a.*, rownum rm
        from (
        select i.yymm,
        i.optimal_quantity, p.product_name,
        max(CASE WHEN h.sale_or_purchase = 0 THEN h.price END) AS pur_price,
        max(CASE WHEN h.sale_or_purchase = 1 THEN h.price END) AS sale_price,
        MAX(CASE WHEN i.stock_type = 0 THEN i.quantity END) AS beginning,
        MAX(CASE WHEN i.stock_type = 1 THEN i.quantity END) AS closing,
        c.title, p.product_no
        from inventory i
        left join product p on p.product_no = i.product_no
        left join price_history h on p.product_no = h.product_no
        left join categories c on c.top_category = p.category
        WHERE 1 = 1
        <if test="yymm != null and yymm != ''">
            AND i.yymm LIKE '%' || #{yymm} || '%'
        </if>
        <if test="product_name != null and product_name != ''">
            AND p.product_name LIKE '%' || #{product_name} || '%'
        </if>
        and p.product_delete = 0
        group by i.yymm, i.optimal_quantity, p.product_name,c.title, p.product_no
        order by i.yymm, p.product_no) a )
        where rm between #{start} and #{end}
    </select>

    <select id="SearchCount" parameterType="InventoryDto" resultType="int">
        select count(*)
        from ( select a.*, rownum rm
        from (

        select i.yymm,i.optimal_quantity, p.product_name,
        max(CASE WHEN h.sale_or_purchase = 0 THEN h.price END) AS pur_price,
        max(CASE WHEN h.sale_or_purchase = 1 THEN h.price END) AS sale_price,
        MAX(CASE WHEN i.stock_type = 0 THEN i.quantity END) AS beginning,
        MAX(CASE WHEN i.stock_type = 1 THEN i.quantity END) AS closing,
        c.title, p.product_no
        from inventory i
        left join product p on p.product_no = i.product_no
        left join price_history h on p.product_no = h.product_no
        left join categories c on c.top_category = p.category
        WHERE 1 = 1
        <if test="yymm != null and yymm != ''">
            AND i.yymm LIKE '%' || #{yymm} || '%'
        </if>
        <if test="product_name != null and product_name != ''">
            AND p.product_name LIKE '%' || #{product_name} || '%'
        </if>
        and p.product_delete = 0
        group by i.yymm, i.optimal_quantity, p.product_name,c.title,p.product_no
        order by i.yymm) a )
    </select>

    <update id="OptimalModify" parameterType="InventoryDto">
        update INVENTORY
        set OPTIMAL_QUANTITY = #{optimal_quantity}
        where PRODUCT_NO = #{product_no}
    </update>

    <update id="ProdDelQuantModify" parameterType="Long">
        update INVENTORY
        set OPTIMAL_QUANTITY = 0,
            QUANTITY         = 0
        where PRODUCT_NO = #{product_no}
    </update>

    <insert id="invenCreate" parameterType="InventoryDto">
        insert into inventory(yymm, product_no, STOCK_TYPE, QUANTITY, OPTIMAL_QUANTITY)
        values (#{yymm}, #{product_no}, 0, #{quantity}, #{optimal_quantity})
    </insert>

    <update id="closing" parameterType="ClosingDto">
        { CALL CLOSING_PKG.closing_main(
                #{yymm, mode=IN, jdbcType=VARCHAR},
                #{emp_no, mode=IN, jdbcType=INTEGER}
               ) }
    </update>

    <update id="dayClosing" parameterType="ClosingDto">
        { CALL day_closing_pkg.DAY_CLOSING_MAIN(
                #{yymm, mode=IN, jdbcType=VARCHAR},
                #{emp_no, mode=IN, jdbcType=INTEGER}
               )}
    </update>

    <select id="closingCheck" resultType="int">
        SELECT COUNT(*)
        FROM MONTH_CLOSING
        WHERE yymm = #{yymm}
        AND CLOSING_TYPE = 2
    </select>

    <select id="findStockByProdStock" resultType="InventoryDto" parameterType="InventoryDto">
        select *
        from inventory
        where PRODUCT_NO = #{product_no}
        and STOCK_TYPE = #{stock_type}
        and yymm = to_char(sysdate, 'yy/mm')
    </select>

    <update id="quantityModify" parameterType="InventoryDto">
        update inventory
        set quantity = #{quantity}
        where product_no = #{product_no}
        and yymm = to_char(sysdate, 'yy/mm')
        and stock_type = #{stock_type}
    </update>

</mapper>
