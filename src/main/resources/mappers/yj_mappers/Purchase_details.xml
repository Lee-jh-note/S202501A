<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.oracle.s202501a.mapper.Purchase_detailsMapper">

	<!-- 입고 검색 총 갯수 - yjSearchTotalPurchaseDetailPlan -->
	<!-- 상태가 '대기'인 애들만 보이게하기 -->
	<select id="yjSearchTotalPurchaseDetailPlan" parameterType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll" resultType="int">
		select Count(*)
			from(
			    select pd.purchase_date, pd.client_no, COUNT(pd.product_no) AS product_count
                from purchase_details pd
				left join clients c on pd.client_no = c.client_no
				left join purchase pur on pd.purchase_date = pur.purchase_date AND pd.client_no = pur.client_no
				left join emp e on pur.emp_no = e.emp_no
				left join product pro on pd.product_no = pro.product_no
                where pd.status = 0
		        <!-- 시작일과 종료일 -->
		        <if test="startDate != null and startDate != ''">
		         <![CDATA[
				    AND pd.purchase_date >= #{startDate}
				 ]]>
				</if>
				<if test="endDate != null and endDate != ''">
				 <![CDATA[
				    AND pd.purchase_date <= #{endDate}
				 ]]>
				</if>
		
		        <!-- 거래처 검색 -->
		        <if test="client_name != null and client_name != ''">
		            AND LOWER(c.client_name) like '%' || LOWER(#{client_name}) || '%'
		        </if>
			    
			    <!-- 요청배송일 검색 -->
		        <if test="req_delivery_date != null and req_delivery_date != ''">
		            AND pur.req_delivery_date = #{req_delivery_date}
		        </if>

		        GROUP BY pd.purchase_date, pd.client_no
		        )
	</select>
	
	<!-- 입고 검색 리스트- yjSearchListPurchaseDetailPlan -->
	<!-- 상태가 '대기'인 애들만 보이게하기 -->
	<select id="yjSearchListPurchaseDetailPlan" parameterType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select *
		from (
		    select rownum rn, a.*
		    from (
		            select pd.purchase_date, c.client_no,
		            MIN(pur.req_delivery_date) req_delivery_date,
					MIN(c.client_name) client_name, 
					MIN(e.emp_no) emp_no, 
					MIN(e.emp_name) emp_name, 
					MIN(pro.product_name) product_name,
					COUNT(pd.product_no) AS product_count,
					SUM(pd.quantity) AS total_quantity,
					SUM(NVL(pd.price, 0) * NVL(pd.quantity, 0)) AS total_price,
					MIN(CASE pd.status
					    WHEN 0 THEN '대기'
					    WHEN 1 THEN '미입고'
					    WHEN 2 THEN '입고'
					    ELSE '알 수 없음'
					    END) AS status
					from purchase_details pd
					left join clients c on pd.client_no = c.client_no
					left join purchase pur on pd.purchase_date = pur.purchase_date AND pd.client_no = pur.client_no
					left join emp e on pur.emp_no = e.emp_no
					left join product pro on pd.product_no = pro.product_no
					where pd.status = 0
	
			        <!-- 시작일과 종료일 -->
			        <if test="startDate != null and startDate != ''">
			         <![CDATA[
					    AND pd.purchase_date >= #{startDate}
					 ]]>
					</if>
					<if test="endDate != null and endDate != ''">
					 <![CDATA[
					    AND pd.purchase_date <= #{endDate}
					 ]]>
					</if>
			
			        <!-- 거래처 검색 -->
			        <if test="client_name != null and client_name != ''">
			            AND LOWER(c.client_name) like '%' || LOWER(#{client_name}) || '%'
			        </if>
				    
				    <!-- 요청배송일 검색 -->
			        <if test="req_delivery_date != null and req_delivery_date != ''">
			            AND pur.req_delivery_date = #{req_delivery_date}
			        </if>
			        
		            GROUP BY pd.purchase_date, c.client_no
			        order by pd.purchase_date desc
			    ) a
			)
			WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 입고 예정 리스트의 상세 화면 -->
	<!-- 가져와야하는 값: 매입일자, 거래처명(거래처코드) -->
	<select id="yjDetailPurchaseDetailPlan" parameterType="map" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select pd.purchase_date, c.client_name, e.emp_name, c.client_no
		from purchase_details pd
		left join clients c on pd.client_no = c.client_no
		left join purchase pur on pd.purchase_date = pur.purchase_date AND pd.client_no = pur.client_no
		left join emp e on pur.emp_no = e.emp_no
		left join product pro on pd.product_no = pro.product_no
		where pd.purchase_date = #{purchase_date}
		    and pd.client_no = #{client_no}
		group by pd.purchase_date, c.client_name, e.emp_name, c.client_no
	</select>
	 <!-- 품목명(품목코드), 단가, 수량, 총금액 -->
	<select id="yjDetailPurchaseDetailPlanList" parameterType="map" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select pro.product_name, pd.price, pd.quantity, e.emp_name, c.client_no, pd.purchase_date, pd.product_no
		from purchase_details pd
		left join clients c on pd.client_no = c.client_no
		left join emp e on pd.emp_no = e.emp_no
		left join product pro on pd.product_no = pro.product_no
		where pd.purchase_date = #{purchase_date}
		    and pd.client_no = #{client_no}
	</select>
	
    <!-- 입고 버튼 - 구매 테이블 상태 업데이트 -->
    <update id="yjUpdatePurchaseStatus">
        UPDATE purchase
        SET status = #{status}
        WHERE purchase_date = #{purchaseDate}
          AND client_no = #{clientNo}
    </update>
	
	<!-- 입고 버튼 - 구매 상세 상태 업데이트 -->
    <update id="yjUpdatePurchaseDetailStatus">
        UPDATE purchase_details
        SET status = #{status},
        	emp_no = #{currentNo}
        WHERE purchase_date = #{purchaseDate}
          AND client_no = #{clientNo}
          AND product_no = #{productNo}
    </update>

	
		
	<!-- 입고 검색 총 갯수 - yjSearchTotalPurchaseDetail -->
	<!-- 상태가 '입고'인 애들만 보이게 하기 -->
	<select id="yjSearchTotalPurchaseDetail" parameterType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll" resultType="int">
		select Count(*)
			from(
			    select pd.purchase_date, pd.client_no, COUNT(pd.product_no) AS product_count
                from purchase_details pd
                left join product pro on pd.product_no = pro.product_no
                left join clients c on pd.client_no = c.client_no
                where pd.status = 2
		        <!-- 시작일과 종료일 -->
		        <if test="startDate != null and startDate != ''">
		         <![CDATA[
				    AND pd.purchase_date >= #{startDate}
				 ]]>
				</if>
				<if test="endDate != null and endDate != ''">
				 <![CDATA[
				    AND pd.purchase_date <= #{endDate}
				 ]]>
				</if>
		
		        <!-- 거래처 검색 -->
		        <if test="client_name != null and client_name != ''">
		            AND LOWER(c.client_name) like '%' || LOWER(#{client_name}) || '%'
		        </if>
			    
			    <!-- 요청배송일 검색 -->
		        <if test="req_delivery_date != null and req_delivery_date != ''">
		            AND pur.req_delivery_date = #{req_delivery_date}
		        </if>

		        GROUP BY pd.purchase_date, pd.client_no
		        )
	</select>
		
	<!-- 입고 검색 리스트- yjSearchListPurchaseDetail -->
	<!-- 상태가 '입고'인 애들만 보이게 하기 -->
	<select id="yjSearchListPurchaseDetail" parameterType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select *
		from (
		    select rownum rn, a.*
		    from (
		            select pd.purchase_date, c.client_no,
					MIN(c.client_name) client_name, 
					MIN(e.emp_no) emp_no, 
					MIN(e.emp_name) emp_name, 
					MIN(pro.product_name) product_name,
					COUNT(pd.product_no) AS product_count,
					SUM(pd.quantity) AS total_quantity,
					SUM(NVL(pd.price, 0) * NVL(pd.quantity, 0)) AS total_price,
					MIN(CASE pd.status
					    WHEN 0 THEN '대기'
					    WHEN 1 THEN '미입고'
					    WHEN 2 THEN '입고'
					    ELSE '알 수 없음'
					    END) AS status
					from purchase_details pd
					left join clients c on pd.client_no = c.client_no
					left join emp e on pd.emp_no = e.emp_no
					left join product pro on pd.product_no = pro.product_no
					where pd.status = 2

			        <!-- 시작일과 종료일 -->
			        <if test="startDate != null and startDate != ''">
			         <![CDATA[
					    AND pd.purchase_date >= #{startDate}
					 ]]>
					</if>
					<if test="endDate != null and endDate != ''">
					 <![CDATA[
					    AND pd.purchase_date <= #{endDate}
					 ]]>
					</if>
			
			        <!-- 거래처 검색 -->
			        <if test="client_name != null and client_name != ''">
			            AND LOWER(c.client_name) like '%' || LOWER(#{client_name}) || '%'
			        </if>
				    
				    <!-- 요청배송일 검색 -->
			        <if test="req_delivery_date != null and req_delivery_date != ''">
			            AND pur.req_delivery_date = #{req_delivery_date}
			        </if>

		            GROUP BY pd.purchase_date, c.client_no
			        order by pd.purchase_date desc
			    ) a
			)
			WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 입고 조회의 상세 화면-->
	<!-- 가져와야하는 값: 매입일자, 거래처명(거래처코드) -->
	<select id="yjDetailPurchaseDetails" parameterType="map" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select pd.purchase_date, c.client_name, e.emp_name, e.emp_no
		from purchase_details pd
		left join clients c on pd.client_no = c.client_no
		left join emp e on pd.emp_no = e.emp_no
		left join product pro on pd.product_no = pro.product_no
		where pd.purchase_date = #{purchase_date}
		    and pd.client_no = #{client_no}
		    and pd.status = 2
		group by pd.purchase_date, c.client_name, e.emp_name, e.emp_no
	</select>
	 <!-- 품목명(품목코드), 단가, 수량, 총금액 -->
	<select id="yjDetailPurchaseDetailLists" parameterType="map" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select pro.product_name, pd.price, pd.quantity, e.emp_name, c.client_no, pd.purchase_date, pd.product_no
		from purchase_details pd
		left join clients c on pd.client_no = c.client_no
		left join emp e on pd.emp_no = e.emp_no
		left join product pro on pd.product_no = pro.product_no
		where pd.purchase_date = #{purchase_date}
		    and pd.client_no = #{client_no}
		    and pd.status = 2
	</select>
	

		
	<!-- 미입고 검색 총 갯수 - yjSearchTotalPurchaseDetailNo -->
	<!-- 상태가 '미입고'인 애들만 보이게 하기 -->
	<select id="yjSearchTotalPurchaseDetailNo" parameterType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll" resultType="int">
		select Count(*)
			from(
			    select pd.purchase_date, pd.client_no, COUNT(pd.product_no) AS product_count
                from purchase_details pd
                left join product pro on pd.product_no = pro.product_no
                left join clients c on pd.client_no = c.client_no
                where pd.status = 1
			        <!-- 시작일과 종료일 -->
			        <if test="startDate != null and startDate != ''">
			         <![CDATA[
					    AND pd.purchase_date >= #{startDate}
					 ]]>
					</if>
					<if test="endDate != null and endDate != ''">
					 <![CDATA[
					    AND pd.purchase_date <= #{endDate}
					 ]]>
					</if>
			
			        <!-- 거래처 검색 -->
			        <if test="client_name != null and client_name != ''">
			            AND LOWER(c.client_name) like '%' || LOWER(#{client_name}) || '%'
			        </if>
				    
				    <!-- 요청배송일 검색 -->
			        <if test="req_delivery_date != null and req_delivery_date != ''">
			            AND pur.req_delivery_date = #{req_delivery_date}
			        </if>
		        
		        GROUP BY pd.purchase_date, pd.client_no
		        )
	</select>
		
	<!-- 미입고 검색 리스트- yjSearchListPurchaseDetailNo -->
	<!-- 상태가 '미입고'인 애들만 보이게 하기 -->
	<select id="yjSearchListPurchaseDetailNo" parameterType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select *
		from (
		    select rownum rn, a.*
		    from (
		            select pd.purchase_date, c.client_no,
					MIN(c.client_name) client_name, 
					MIN(e.emp_no) emp_no, 
					MIN(e.emp_name) emp_name, 
					MIN(pro.product_name) product_name,
					COUNT(pd.product_no) AS product_count,
					SUM(pd.quantity) AS total_quantity,
					SUM(NVL(pd.price, 0) * NVL(pd.quantity, 0)) AS total_price,
					MIN(CASE pd.status
					    WHEN 0 THEN '대기'
					    WHEN 1 THEN '미입고'
					    WHEN 2 THEN '입고'
					    ELSE '알 수 없음'
					    END) AS status
					from purchase_details pd
					left join clients c on pd.client_no = c.client_no
					left join emp e on pd.emp_no = e.emp_no
					left join product pro on pd.product_no = pro.product_no
					where pd.status = 1

			        <!-- 시작일과 종료일 -->
			        <if test="startDate != null and startDate != ''">
			         <![CDATA[
					    AND pd.purchase_date >= #{startDate}
					 ]]>
					</if>
					<if test="endDate != null and endDate != ''">
					 <![CDATA[
					    AND pd.purchase_date <= #{endDate}
					 ]]>
					</if>
			
			        <!-- 거래처 검색 -->
			        <if test="client_name != null and client_name != ''">
			            AND LOWER(c.client_name) like '%' || LOWER(#{client_name}) || '%'
			        </if>
				    
				    <!-- 요청배송일 검색 -->
			        <if test="req_delivery_date != null and req_delivery_date != ''">
			            AND pur.req_delivery_date = #{req_delivery_date}
			        </if>
			        
		            GROUP BY pd.purchase_date, c.client_no
			        order by pd.purchase_date desc
			    ) a
			)
			WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 미입고 조회의 상세 화면-->
	<!-- 가져와야하는 값: 매입일자, 거래처명(거래처코드) -->
	<select id="yjDetailPurchaseDetailsNo" parameterType="map" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select pd.purchase_date, c.client_name, e.emp_name, e.emp_no
		from purchase_details pd
		left join clients c on pd.client_no = c.client_no
		left join emp e on pd.emp_no = e.emp_no
		left join product pro on pd.product_no = pro.product_no
		where pd.purchase_date = #{purchase_date}
		    and pd.client_no = #{client_no}
		    and pd.status = 1
		group by pd.purchase_date, c.client_name, e.emp_name, e.emp_no
	</select>
	 <!-- 품목명(품목코드), 단가, 수량, 총금액 -->
	<select id="yjDetailPurchaseDetailNoLists" parameterType="map" resultType="org.oracle.s202501a.dto.yj_dto.PurchaseDetailsAll">
		select pro.product_name, pd.price, pd.quantity, e.emp_name, c.client_no, pd.purchase_date, pd.product_no
		from purchase_details pd
		left join clients c on pd.client_no = c.client_no
		left join emp e on pd.emp_no = e.emp_no
		left join product pro on pd.product_no = pro.product_no
		where pd.purchase_date = #{purchase_date}
		    and pd.client_no = #{client_no}
		    and pd.status = 1
	</select>
	
	
	<!-- 발주서 등록에서 물품 등록 -->
	<insert id="yjInsertDetailPurchase" parameterType="org.oracle.s202501a.dto.yj_dto.Purchase_details">
 		INSERT INTO purchase_details (purchase_date, client_no, product_no, quantity, price)
    	VALUES (#{purchase_date}, #{client_no}, #{product_no}, #{quantity}, #{price})
	</insert>


</mapper>